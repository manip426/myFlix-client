var helpers = require("../../../../../../AppData/Roaming/nvm/v14.17.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRedux = require("react-redux");
var _reactRouterDom = require("react-router-dom");
// #0
var _actions = require("../../actions/actions");
// we haven't written this one yet
var _moviesList = require("../movies-list/movies-list");
var _moviesListDefault = parcelHelpers.interopDefault(_moviesList);
/* 
  #1 The rest of components import statements but without the MovieCard's 
  because it will be imported and used in the MoviesList component rather
  than in here. 
*/ var _movieView = require("../movie-view/movie-view");
var _loginView = require("../login-view/login-view");
//import { MovieCard } from '../movie-card/movie-card';
var _registrationView = require("../registration-view/registration-view");
var _nav = require("../nav/nav");
var _reactBootstrap = require("react-bootstrap");
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
            user: null
        };
    }
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) {
            this.setState({
                user: localStorage.getItem('user')
            });
            this.getMovies(accessToken);
        }
    }
    /* When a movie is clicked, this function is involed and updates the state of the selectedMovie property to that movie*/ setSelectedMovie(movie) {
        this.setState({
            selectedMovie: movie
        });
    }
    /*When a user logs in, this function updates the user property in state to that particular user */ onLoggedIn(authData) {
        console.log(authData);
        this.setState({
            user: authData.user.Username
        });
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', authData.user.Username);
        this.getMovies(authData.token);
    }
    onRegister(register) {
        this.setState({
            register
        });
    }
    getMovies(token) {
        _axiosDefault.default.get('https://manpreet-movieapi.herokuapp.com/movies', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            // Assign the result to the state
            this.setState({
                movies: response.data
            });
        }).catch(function(error) {
            console.log(error);
        });
    }
    onSignOut() {
        localStorage.removeItem('token');
        localStorage.removeItem('user');
        this.setState({
            user: null
        });
    }
    render() {
        let { movies  } = this.props;
        let { user  } = this.state;
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 99
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Row, {
            className: "main-view justify-content-md-center",
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 100
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_moviesListDefault.default, {
                    movies: movies
                }));
            },
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 101
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Container, {
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 108
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_nav.Navigation, {
            bg: "dark",
            variant: "dark",
            fixed: "top",
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 109
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.NavbarBrand, {
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 110
            },
            __self: this
        }, "Welcome to MyFlix!"), /*#__PURE__*/ _reactDefault.default.createElement("ul", {
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 111
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/`,
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 112
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
            variant: "link",
            className: "navbar-link text-light",
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 113
            },
            __self: this
        }, "Movies")), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/users/${user}`,
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 115
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
            variant: "link",
            className: "navbar-link text-light",
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 116
            },
            __self: this
        }, "Profile")), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/`,
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 118
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
            variant: "link",
            className: "navbar-link text-light",
            onClick: ()=>this.onLoggedOut()
            ,
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 119
            },
            __self: this
        }, "Logout"))))), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, null, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                })));
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return movies.map[(movie)=>/*#__PURE__*/ _reactDefault.default.createElement(MovieCard, {
                        movie: movie
                    })
                ];
            },
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 125
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/register",
            render: ()=>{
                if (user) return(/*#__PURE__*/ _reactDefault.default.createElement(Redirect, {
                    to: "/"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, null, /*#__PURE__*/ _reactDefault.default.createElement(_registrationView.RegistrationView, null)));
            },
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 132
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/users/:userId",
            render: ()=>{
                if (!user) return;
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, null, /*#__PURE__*/ _reactDefault.default.createElement(ProfileView, {
                    onLoggedIn: (user1)=>this.onLoggedIn(user1)
                    ,
                    movies: movies,
                    user: user,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 139
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:movieId",
            render: ({ match , history  })=>{
                if (!user) return;
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    ),
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 148
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/genres/:name",
            render: ({ match , history  })=>{
                if (!user) return;
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(GenreView, {
                    genre: movies.find((m)=>m.Genre.Name === match.params.name
                    ).Genre,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 156
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/directors/:name",
            render: ({ match , history  })=>{
                if (!user) return;
                if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
                    className: "main-view"
                }));
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(DirectorView, {
                    director: movies.find((m)=>m.Director.Name === match.params.name
                    ).Director,
                    onBackClick: ()=>history.goBack()
                })));
            },
            __source: {
                fileName: "C:\\Users\\dhali\\OneDrive\\Documents\\myFlix-client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 164
            },
            __self: this
        }))));
    }
}
let mapStateToProps = (state)=>{
    return {
        movies: state.movies
    };
};
exports.default = _reactRedux.connect(mapStateToProps, {
    setMovies: _actions.setMovies
})(MainView);

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}